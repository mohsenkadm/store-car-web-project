
@using X.PagedList.Mvc.Core; <!--import to get HTML Helper-->
@using X.PagedList;
@model IEnumerable<store_car_web_project.Models.Entity.Security.Users>
@{
    ViewData["Title"] = "usersview";
    Layout = "~/Views/Shared/_MyLayout.cshtml";
}

<section id="search_posts" class="section" style="padding:20px 0;">
    <div class="container">
        <div class="row">
            <div class="title text-center wow fadeInDown">
                <h2>واجهه <span class="color"> المستخدمين </span></h2>
                <div class="border"></div>
            </div>
           
            @using (Html.BeginForm("usersview","usercontrol", FormMethod.Get))
            { <div class="row">
            <div class="col-lg-8 col-md-8 col-sm-8 col-xs-8">
                <div class="text-center form-group wow fadeInDown">
                    <input type="text" placeholder="البحث عن المستخدم" style="width: 70%; margin-left: auto;" class="form-control text-right" autocomplete="off" name="searching" id="searching" />
                </div>
            </div>
            <div class="col-lg-2 col-md-2 col-sm-2 col-xs-2">
                <div class="text-center wow fadeInDown" style="text-align:left;">
                    <input type="submit" class="btn btn-main" style="text-align:left;" value="بحث"/>
                </div>
            </div>
        </div>
            }
        </div>
    </div>
</section> 
<p>@Model.Count() users exist.</p>

<table class="table table-responsive">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.UserName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Code)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsConfirm)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Isonline)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Lastlogin)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Lastlogout)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsActive)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.InsertDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UpdateDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsDeletet)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Version)
            </th>
            <th>

            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Code)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsConfirm)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Isonline)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Lastlogin)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Lastlogout)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsActive)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.InsertDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UpdateDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsDeletet)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Version)
                </td>
                <td>
                    <a class="btn btn-main" asp-action="DeleteUser" asp-route-id="@item.Id" onclick="return confirm('are sure to delete?');">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@Html.PagedListPager((IPagedList)Model, page => Url.Action("usersview", new { page = page }),
    new X.PagedList.Mvc.Core.Common.PagedListRenderOptions
    {
        DisplayItemSliceAndTotal = true,
        ContainerDivClasses = new[] { "c navigation text-center" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" },

    })